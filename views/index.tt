<script type="text/javascript">
var token;
var item_fields = [];
var field_order = [];
var page_elements = [];
var total_items = 0;
var current_items = [];
var list_cols = [
    'name',
    'location',
    'is_loanable',
    'on_loan_to',
    'expected_return_date',
    'm_time',
];

$('document').ready(function() {
    page_elements.login = $('#login_form');
    page_elements.item_list = $('#item_list');
    page_elements.item_detail = $('#item_detail');
    page_elements.new_item = $('#new_item');
    page_elements.message = $('#message');

    page_elements.item_detail.hide();
    page_elements.new_item.hide();
    page_elements.message.html('You must log in to create or edit items');
    get_item_fields();
    show_item_list(0);

    page_elements.login.submit(function(e) {
        e.preventDefault();
        $.ajax({
            url: '/api/get_token',
            type: 'POST',
            data: {
                    username: page_elements.login.find('[name="username"]').val(),
                    password: page_elements.login.find('[name="password"]').val()
                },
            success: function(data) {
                if (data.error) {
                    page_elements.message.html('ERROR: ' + data.error);
                    window.scrollTo(0,0);
                } else {
                    token = data.token;
                    page_elements.login.hide();
                    page_elements.new_item.show();
                    page_elements.message.empty();
                    show_item_list(0);
                }
            }
        });
    });

    page_elements.new_item.find('a').click(function(e) {
        e.preventDefault();
        show_item_detail();
    });

    // cancel & close item detail
    page_elements.item_detail.find('input[name="cancel"]').click(function(e) {
        e.preventDefault();
        page_elements.item_detail.hide();
        show_item_list(0);
        if (token) {
            page_elements.new_item.show();
        }
    });

    // save/update
    var item_detail_form = page_elements.item_detail.find('form');
    item_detail_form.submit(function(e) {
        e.preventDefault();
        var item_id = item_detail_form.find('input[name="item_id"]');
        var type = 'POST';
        var url = '/api/items';

        var data = item_detail_form.serialize();
        data += '&token=' + token;
        if (item_id.length) {
            type = 'PUT';
            url += '/' + item_id.val();
            delete data.item_id;
        }

        $.ajax({
            url: url,
            type: type,
            data: data,
            success: function(data) {
                if (data.item_id) {
                    page_elements.message.html('Item saved');
                    window.scrollTo(0,0);
                    page_elements.item_detail.hide();
                    page_elements.new_item.show();
                    show_item_list(0);
                } else {
                    page_elements.message.html("ERROR:\n" + data.errors.join("<br/>"));
                    window.scrollTo(0,0);
                }
            }
        });
    });

    // show item detail
    $('.item a').live('click', function(e) {
        e.preventDefault();
        var item_id = $(this).attr('href');
        show_item_detail(item_id);
    });
});

function show_item_detail(item_id) {
    page_elements.item_list.hide();
    page_elements.new_item.hide();

    var $div = page_elements.item_detail.find('div');
    $div.empty();

    var item;
    var html = [];

    var disabled = '';
    if (!token) {
        disabled = ' disabled="disabled"';
    }

    if (item_id) {
        item = current_items[item_id];
        html.push('<input type="hidden" name="item_id" value="' + item_id + '"');
    }

    $.each(field_order, function(i, field) {
        var field_meta = item_fields[field];
        if (field_meta.not_editable) {
            return;
        }

        html.push('<div class="field_holder"><label for="'+field+'">' + field_meta.pretty_name + '</label><p>');

        var value;
        if (item) {
            value = item[field];
        }
        if (value == undefined || value === null) {
            value = '';
        }

        if (field_meta.type == 'text') {
            if (field_meta.size && field_meta.size < 150) {
                var size = field_meta.size;
                if (size > 50) {
                    size = 50;
                }
                html.push('<input type="text" name="' + field + '" size="' + size + '" max_size="' + field_meta.size + '" value="' + value + '"' + disabled + '/>');

            } else {
                html.push('<textarea name="' + field + '" rows="5" cols="30"' + disabled + '>' + value + '</textarea>');
            }

        } else if (field_meta.type == 'list') {
            html.push('<select name="' + field + '"' + disabled + '>');
            $.each(field_meta.values, function(i, val) {
                var selected = '';
                if (value && value == val) {
                    selected = ' selected="selected"';
                }
                html.push('<option value="' + val + '"' + selected + '>' + val + '</option>');
            });
            html.push('</select>');

        } else if (field_meta.type == 'int') {
            html.push('<input type="text" name="' + field + '" size="10" value="' + value + '"' + disabled + '/>');

        } else if (field_meta.type == 'date') {
            html.push('<input class="datepicker" type="text" name="' + field + '" size="10" value="' + value + '"' + disabled + '/>');

        } else if (field_meta.type == 'flag') {
            var checked = '';
            if (value) {
                checked = ' checked="checked"';
            }
            html.push('<input type="checkbox"' + checked + ' name="' + field + '" value="1"' + disabled + '/>'); }
        html.push('</p></div>');
    });
    $div.append(html.join(''));
    $div.find('.datepicker').datepicker({dateFormat: 'yy-mm-dd'});

    if (!token) {
        $div.parent('form').find('input[name="submit"]').hide();
    } else {
        $div.parent('form').find('input[name="submit"]').show();
    }

    page_elements.item_detail.show();
}

function get_item_fields() {
    $.ajax({
        url: '/api/items/fields',
        type: 'GET',
//        data: {},
        success: function(data) {
            item_fields = data;
            field_order = ['name', 'description']; // put these two first

            $.each(item_fields, function(field, field_meta) {
                if (field == 'name' || field == 'description' || field == 'inventory_id') {
                    return;
                }
                field_order.push(field);
            });
        }
    });
}

function show_item_list(offset) {
    if (!offset) {
        offset = 0;
    }

    page_elements.item_list.find('table').empty();
    page_elements.item_list.show();

    $.ajax({
        url: '/api/items',
        type: 'GET',
        data: {
                offset: 0
            },
        success: function(data) {
            if (data.error) {
                page_elements.message.html('ERROR: ' + data.error);
                window.scrollTo(0,0);

            } else {
                total_items = data.total;

                var html = ['<tr>'];
                $.each(list_cols, function(i, field) {
                    var field_meta = item_fields[field];
                    html.push('<th>' + field_meta.pretty_name + '</th>');
                });
                html.push('</tr>');
                current_items = [];

                $.each(data.data, function(i, item) {
                    current_items[item.inventory_id] = item;
                    html.push('<tr class="item">');

                    $.each(list_cols, function(i, field) {
                        var value = item[field];
                        if (value === null) {
                            value = '&nbsp;';
                        }
                        if (field == 'name') {
                            html.push('<td><a href="' + item.inventory_id + '">' + value + '</a></td>');
                        } else {
                            html.push('<td>' + value + '</td>');
                        }
                    });
                    html.push('</tr>');
                });
                page_elements.item_list.find('table').append(html.join(''));
            }
        }
    });
}
</script>

<div id="header">
    <h1>HSC Inventory</h1>
    <p>Sample frontend for the Inventory REST API</p>
</div>

<div id="container">
<div id="message"></div>

<div id="login_form">
    <h3>Log In:</h3>
    <form method="post" action="get_token">
        <label for="username">User Name:</label>
        <input type="text" size="30" name="username"/>
        <br/>
        <label for="password">Password:</label>
        <input type="password" size="30" name="password"/>
        <br/>
        <input type="submit" value="Log In"/>
    </form>
</div>

<div id="new_item">
    <a href="#">Create New Item</a>
</div>

<div id="item_detail">
    <form method="post">
        <div>
        </div>
        <input type="submit" name="submit" value="Save"/><br/>
        <input type="button" name="cancel" value="Cancel"/>
    </form>
</div>

<div id="item_list">
    <ul class="pagination">
    </ul>

    <table rules="all" cellspacing="0" cellpadding="0">
    </table>
</div>
</div>
